# docker-compose.yml for schematic-replicator
# Provides a complete stack with Redis for caching
# All services are grouped under the 'schematic-replicator' stack

# Stack configuration
name: schematic-replicator

services:
  schematic-replicator:
    build:
      context: ..
      dockerfile: deployments/Dockerfile
      platforms:
        - linux/amd64
      args:
        - HEALTH_PORT=${HEALTH_PORT:-8090}
    image: schematic-replicator:latest
    container_name: schematic-replicator
    ports:
      - "${HEALTH_PORT:-8090}:${HEALTH_PORT:-8090}"  # Health/API port (configurable)
    labels:
      - "com.schematic.stack=replicator"
      - "com.schematic.service=replicator"
      - "com.schematic.version=latest"
    environment:
      # Required environment variables
      - SCHEMATIC_API_KEY=${SCHEMATIC_API_KEY}
      - SCHEMATIC_API_URL=${SCHEMATIC_API_URL:-https://api.schematichq.com}
      
      # Optional configuration
      - CACHE_TTL=${CACHE_TTL:-5m}
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - HEALTH_PORT=${HEALTH_PORT:-8090}
      
      # Redis configuration
      - REDIS_ADDR=redis:6379
      - REDIS_PASSWORD=${REDIS_PASSWORD:-}
      - REDIS_DB=${REDIS_DB:-0}
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp:noexec,nosuid,size=10m
    networks:
      - replicator-network
    # External health check - use HTTP endpoints from outside the container
    # For Kubernetes: configure liveness/readiness probes to use /health and /ready endpoints
    # For development: monitor via curl http://localhost:${HEALTH_PORT:-8090}/health

  redis:
    image: redis:7-alpine
    container_name: schematic-redis
    ports:
      - "6380:6379"  # Redis port (mapped to 6380 to avoid conflicts)
    labels:
      - "com.schematic.stack=replicator"
      - "com.schematic.service=redis"
      - "com.schematic.version=7-alpine"
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD:-}
    command: >
      redis-server
      --appendonly yes
      --appendfsync everysec
      --save 60 1
      --maxmemory 256mb
      --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp:noexec,nosuid,size=10m
    networks:
      - replicator-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s

networks:
  replicator-network:
    driver: bridge
    name: schematic-replicator-network
    labels:
      - "com.schematic.stack=replicator"

volumes:
  redis_data:
    driver: local
    name: schematic-replicator-redis-data
    labels:
      - "com.schematic.stack=replicator"
      - "com.schematic.service=redis"